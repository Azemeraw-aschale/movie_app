generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bankaccounts {
  id         BigInt @id @default(autoincrement())
  user_id    String @db.VarChar(6)
  bank_name  String @db.VarChar(50)
  acc_number String @db.VarChar(20)
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accidentreport_accidentreport {
  id              BigInt          @id @default(autoincrement())
  insurer         String?         @db.VarChar(255)
  address         String?         @db.VarChar(255)
  date            DateTime?       @db.Date
  accident_time   DateTime?       @db.Time(6)
  images          Json?
  created_at      DateTime        @db.Timestamptz(6)
  updated_at      DateTime        @db.Timestamptz(6)
  vehicle_id      BigInt
  vehicle_vehicle vehicle_vehicle @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accidentreport_accid_vehicle_id_b7157f54_fk_vehicle_v")

  @@index([vehicle_id], map: "accidentreport_accidentreport_vehicle_id_b7157f54")
}

model accounts_customuser {
  id                                                BigInt                                 @id @default(autoincrement())
  password                                          String                                 @db.VarChar(128)
  last_login                                        DateTime?                              @db.Timestamptz(6)
  is_superuser                                      Boolean
  username                                          String                                 @unique @db.VarChar(150)
  first_name                                        String                                 @db.VarChar(150)
  last_name                                         String                                 @db.VarChar(150)
  email                                             String                                 @db.VarChar(254)
  is_staff                                          Boolean
  is_active                                         Boolean
  date_joined                                       DateTime                               @db.Timestamptz(6)
  phone_number                                      String                                 @unique @db.VarChar(15)
  lang                                              String                                 @db.VarChar(2)
  avatar                                            String?                                @db.VarChar(100)
  otp                                               String?                                @db.VarChar(255)
  otp_timestamp                                     Int?
  is_available                                      Boolean                                @default(false)
  user_type                                         Int                                    @default(1)
  active_status                                     Int?                                   @default(1)
  accounts_customuser_groups                        accounts_customuser_groups[]
  accounts_customuser_user_permissions              accounts_customuser_user_permissions[]
  authtoken_token                                   authtoken_token?
  django_admin_log                                  django_admin_log[]
  document_document                                 document_document[]
  drivinglicense_drivinglicense                     drivinglicense_drivinglicense[]
  news                                              news[]
  orders_orders_customer_id_idToaccounts_customuser orders[]                               @relation("orders_customer_id_idToaccounts_customuser")
  orders_orders_rider_id_idToaccounts_customuser    orders[]                               @relation("orders_rider_id_idToaccounts_customuser")
  ratings                                           ratings[]
  vehicle_vehicle                                   vehicle_vehicle[]
  yeneboloeth_yeneboloeth1                          yeneboloeth_yeneboloeth1[]

  @@index([phone_number], map: "accounts_customuser_phone_number_32c4e511_like")
  @@index([username], map: "accounts_customuser_username_722f3555_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounts_customuser_groups {
  id                  BigInt              @id @default(autoincrement())
  customuser_id       BigInt
  group_id            Int
  accounts_customuser accounts_customuser @relation(fields: [customuser_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_customuser__customuser_id_bc55088e_fk_accounts_")
  auth_group          auth_group          @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_customuser_groups_group_id_86ba5f9e_fk_auth_group_id")

  @@unique([customuser_id, group_id], map: "accounts_customuser_groups_customuser_id_group_id_c074bdcb_uniq")
  @@index([customuser_id], map: "accounts_customuser_groups_customuser_id_bc55088e")
  @@index([group_id], map: "accounts_customuser_groups_group_id_86ba5f9e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounts_customuser_user_permissions {
  id                  BigInt              @id @default(autoincrement())
  customuser_id       BigInt
  permission_id       Int
  accounts_customuser accounts_customuser @relation(fields: [customuser_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_customuser__customuser_id_0deaefae_fk_accounts_")
  auth_permission     auth_permission     @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_customuser__permission_id_aea3d0e5_fk_auth_perm")

  @@unique([customuser_id, permission_id], map: "accounts_customuser_user_customuser_id_permission_9632a709_uniq")
  @@index([customuser_id], map: "accounts_customuser_user_permissions_customuser_id_0deaefae")
  @@index([permission_id], map: "accounts_customuser_user_permissions_permission_id_aea3d0e5")
}

model advert_advert {
  id          BigInt    @id @default(autoincrement())
  title       String    @db.VarChar(200)
  desc        String    @db.VarChar(200)
  category    String    @db.VarChar(200)
  priority    String    @db.VarChar(200)
  price       Float
  expire_date DateTime? @db.Timestamptz(6)
  image       String?   @db.VarChar(100)
}

model auth_group {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @unique @db.VarChar(150)
  accounts_customuser_groups accounts_customuser_groups[]
  auth_group_permissions     auth_group_permissions[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                                   Int                                    @id @default(autoincrement())
  name                                 String                                 @db.VarChar(255)
  content_type_id                      Int
  codename                             String                                 @db.VarChar(100)
  accounts_customuser_user_permissions accounts_customuser_user_permissions[]
  auth_group_permissions               auth_group_permissions[]
  django_content_type                  django_content_type                    @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model authtoken_token {
  key                 String              @id @db.VarChar(40)
  created             DateTime            @db.Timestamptz(6)
  user_id             BigInt              @unique
  accounts_customuser accounts_customuser @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "authtoken_token_user_id_35299eff_fk_accounts_customuser_id")

  @@index([key], map: "authtoken_token_key_10f0b77e_like")
}

model azi {
  id       Int     @id @default(autoincrement())
  username String? @db.VarChar(255)
  email    String? @db.VarChar(255)
}

model azii {
  id       Int     @id @default(autoincrement())
  username String? @db.VarChar(255)
  email    String? @db.VarChar(255)
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model bolo_bolo {
  id                  BigInt          @id @default(autoincrement())
  inspection_date     DateTime?       @db.Date
  expire_date         DateTime?       @db.Date
  image               String?         @db.VarChar(100)
  notification_status Boolean
  created_at          DateTime        @db.Timestamptz(6)
  updated_at          DateTime        @db.Timestamptz(6)
  vehicle_id          BigInt
  vehicle_vehicle     vehicle_vehicle @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bolo_bolo_vehicle_id_b18a6191_fk_vehicle_vehicle_id")

  @@index([vehicle_id], map: "bolo_bolo_vehicle_id_b18a6191")
}

model categories {
  id     Int      @id @default(autoincrement())
  name   String?  @db.VarChar(255)
  movies movies[]
}

model channels {
  id     Int      @id @default(autoincrement())
  name   String?  @db.VarChar(255)
  movies movies[]
}

model chapapayment_paymentmodel {
  id           BigInt  @id @default(autoincrement())
  amount       Decimal @db.Decimal(10, 2)
  currency     String  @db.VarChar(3)
  email        String  @db.VarChar(254)
  first_name   String  @db.VarChar(100)
  last_name    String  @db.VarChar(100)
  phone_number String  @db.VarChar(20)
  tx_ref       String  @db.VarChar(100)
  callback_url String  @db.VarChar(200)
  return_url   String  @db.VarChar(200)
  title        String  @db.VarChar(100)
  description  String
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             BigInt
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  accounts_customuser accounts_customuser  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_accounts_customuser_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model document_document {
  id                  BigInt              @id @default(autoincrement())
  images              Json?
  created_at          DateTime            @db.Timestamptz(6)
  updated_at          DateTime            @db.Timestamptz(6)
  user_id             BigInt
  accounts_customuser accounts_customuser @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "document_document_user_id_6b8a36d4_fk_accounts_customuser_id")

  @@index([user_id], map: "document_document_user_id_6b8a36d4")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model drivinglicense_drivinglicense {
  id                  BigInt              @id @default(autoincrement())
  full_name           String?             @db.VarChar(255)
  issue_date          DateTime?           @db.Date
  expire_date         DateTime?           @db.Date
  image               String?             @db.VarChar(100)
  created_at          DateTime            @db.Timestamptz(6)
  updated_at          DateTime            @db.Timestamptz(6)
  user_id             BigInt
  license_number      String?             @db.VarChar(255)
  license_mode        String?             @db.VarChar(255)
  accounts_customuser accounts_customuser @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "drivinglicense_drivi_user_id_54f8ec8f_fk_accounts_")

  @@index([user_id], map: "drivinglicense_drivinglicense_user_id_54f8ec8f")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model fullinsurance_fullinsurance {
  id                  BigInt          @id @default(autoincrement())
  insurer             String?         @db.VarChar(255)
  issue_date          DateTime?       @db.Date
  expire_date         DateTime?       @db.Date
  notification_status Boolean
  images              Json?
  created_at          DateTime        @db.Timestamptz(6)
  updated_at          DateTime        @db.Timestamptz(6)
  vehicle_id          BigInt
  vehicle_vehicle     vehicle_vehicle @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fullinsurance_fullin_vehicle_id_128e0bcf_fk_vehicle_v")

  @@index([vehicle_id], map: "fullinsurance_fullinsurance_vehicle_id_128e0bcf")
}

model locations {
  id        BigInt @id @default(autoincrement())
  lat       String @db.VarChar(100)
  lon       String @db.VarChar(100)
  area_name String @db.VarChar(255)
}

model map_map {
  id      BigInt @id @default(autoincrement())
  name    String @db.VarChar(100)
  lat     Float
  lon     Float
  type    String @db.VarChar(100)
  city    String @db.VarChar(100)
  country String @db.VarChar(100)
  phone   String @db.VarChar(255)
  email   String @db.VarChar(254)
}

model movies {
  id          Int                     @id @default(autoincrement())
  title       String                  @db.VarChar(255)
  duration    Int
  description String?                 @db.VarChar(255)
  channelid   Int?
  typeid      Int?
  categoryid  Int?
  videourl    String?                 @db.VarChar(255)
  categories  categories?             @relation(fields: [categoryid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  channels    channels?               @relation(fields: [channelid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  types       types?                  @relation(fields: [typeid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model news {
  id                  BigInt              @id @default(autoincrement())
  headline            String?
  content             String?
  source              String?
  url                 String?
  publication_date    DateTime?           @db.Timestamptz(6)
  created_at          DateTime            @db.Timestamptz(6)
  updated_at          DateTime            @db.Timestamptz(6)
  user_id             BigInt
  category_id         BigInt?
  news_categories     news_categories?    @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "news_category_id_798ee23f_fk_news_categories_id")
  accounts_customuser accounts_customuser @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "news_user_id_f58d07aa_fk_accounts_customuser_id")
  news_media          news_media[]

  @@index([category_id], map: "news_category_id_798ee23f")
  @@index([user_id], map: "news_user_id_f58d07aa")
}

model news_categories {
  id                   BigInt   @id @default(autoincrement())
  category_description String   @db.VarChar(255)
  created_at           DateTime @db.Timestamptz(6)
  updated_at           DateTime @db.Timestamptz(6)
  news                 news[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model news_media {
  id         BigInt   @id @default(autoincrement())
  file_path  String
  media_type String?
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
  news_id    BigInt
  news       news     @relation(fields: [news_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "news_media_news_id_f63c7320_fk_news_id")

  @@index([news_id], map: "news_media_news_id_f63c7320")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model oilservice_oilservice {
  id                  BigInt          @id @default(autoincrement())
  fill_date           DateTime?       @db.Date
  next_service_date   String?         @db.VarChar(255)
  expire_date         DateTime?       @db.Date
  notification_status Boolean
  created_at          DateTime        @db.Timestamptz(6)
  updated_at          DateTime        @db.Timestamptz(6)
  vehicle_id          BigInt
  vehicle_vehicle     vehicle_vehicle @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "oilservice_oilservice_vehicle_id_b250d2f0_fk_vehicle_vehicle_id")

  @@index([vehicle_id], map: "oilservice_oilservice_vehicle_id_b250d2f0")
}

model order_ordertype {
  id          BigInt   @id @default(autoincrement())
  name        String   @db.VarChar(50)
  description String?  @db.VarChar(255)
  orders      orders[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model orders {
  id                                                             BigInt               @id @default(autoincrement())
  item                                                           BigInt
  quantity                                                       String?              @db.VarChar(100)
  pickup_address                                                 Json?
  delivery_address                                               Json?
  expected_time                                                  String               @db.VarChar(50)
  order_date                                                     DateTime             @db.Timestamptz(6)
  delivered_date                                                 DateTime?            @db.Timestamptz(6)
  status                                                         String               @db.VarChar(50)
  created_at                                                     DateTime             @db.Timestamptz(6)
  updated_at                                                     DateTime             @db.Timestamptz(6)
  customer_id_id                                                 BigInt
  rider_id_id                                                    BigInt?
  item_type_id                                                   BigInt
  accounts_customuser_orders_customer_id_idToaccounts_customuser accounts_customuser  @relation("orders_customer_id_idToaccounts_customuser", fields: [customer_id_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_customer_id_id_3b8bbd0a_fk_accounts_customuser_id")
  order_ordertype                                                order_ordertype      @relation(fields: [item_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_item_type_id_592ba330_fk_order_ordertype_id")
  accounts_customuser_orders_rider_id_idToaccounts_customuser    accounts_customuser? @relation("orders_rider_id_idToaccounts_customuser", fields: [rider_id_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_rider_id_id_974d7619_fk_accounts_customuser_id")

  @@index([customer_id_id], map: "orders_customer_id_id_3b8bbd0a")
  @@index([item_type_id], map: "orders_item_type_id_592ba330")
  @@index([rider_id_id], map: "orders_rider_id_id_974d7619")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model ratings {
  id                  BigInt              @id @default(autoincrement())
  value               Int
  user_id             BigInt
  item_id             BigInt
  spareparts          spareparts          @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ratings_item_id_1d11e4c9_fk_spareparts_id")
  accounts_customuser accounts_customuser @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ratings_user_id_dbf12542_fk_accounts_customuser_id")

  @@index([item_id], map: "ratings_item_id_1d11e4c9")
  @@index([user_id], map: "ratings_user_id_dbf12542")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model roadfund_roadfund {
  id                  BigInt          @id @default(autoincrement())
  issue_date          DateTime?       @db.Date
  expire_date         DateTime?       @db.Date
  image               String?         @db.VarChar(100)
  vehicle_id          BigInt
  created_at          DateTime        @db.Timestamptz(6)
  notification_status Boolean
  updated_at          DateTime        @db.Timestamptz(6)
  vehicle_vehicle     vehicle_vehicle @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "roadfund_roadfund_vehicle_id_15d9e83d_fk_vehicle_vehicle_id")

  @@index([vehicle_id], map: "roadfund_roadfund_vehicle_id_15d9e83d")
}

model sparepart_brands {
  id         BigInt       @id @default(autoincrement())
  name       String       @db.VarChar(255)
  logo       String?      @db.VarChar(100)
  spareparts spareparts[]
}

model sparepart_sparepartcategory {
  id          BigInt       @id @default(autoincrement())
  name        String       @db.VarChar(100)
  description String?      @db.VarChar(255)
  spareparts  spareparts[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model spareparts {
  id                          BigInt                       @id @default(autoincrement())
  name                        String                       @db.VarChar(255)
  description                 String?                      @db.VarChar(255)
  price                       String                       @db.VarChar(100)
  image                       String?                      @db.VarChar(100)
  weight                      String?                      @db.VarChar(100)
  is_available                Boolean
  supplier_id                 BigInt
  brand_id                    BigInt?
  category_id                 BigInt?
  ratings                     ratings[]
  sparepart_brands            sparepart_brands?            @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "spareparts_brand_id_4498a793_fk_sparepart_brands_id")
  sparepart_sparepartcategory sparepart_sparepartcategory? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "spareparts_category_id_be08cc06_fk_sparepart")
  suppliers                   suppliers                    @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "spareparts_supplier_id_99ad1ac3_fk_suppliers_id")

  @@index([brand_id], map: "spareparts_brand_id_4498a793")
  @@index([category_id], map: "spareparts_category_id_be08cc06")
  @@index([supplier_id], map: "spareparts_supplier_id_99ad1ac3")
}

model suppliers {
  id         BigInt       @id @default(autoincrement())
  name       String       @db.VarChar(100)
  lat        String?      @db.VarChar(50)
  lon        String?      @db.VarChar(50)
  area_name  String?      @db.VarChar(100)
  logo       String?      @db.VarChar(100)
  spareparts spareparts[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model thirdparty_thirdparty {
  id                  BigInt          @id @default(autoincrement())
  insurer             String?         @db.VarChar(255)
  issue_date          DateTime?       @db.Date
  expire_date         DateTime?       @db.Date
  image               String?         @db.VarChar(100)
  notification_status Boolean
  created_at          DateTime        @db.Timestamptz(6)
  updated_at          DateTime        @db.Timestamptz(6)
  vehicle_id          BigInt
  vehicle_vehicle     vehicle_vehicle @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "thirdparty_thirdparty_vehicle_id_046658fc_fk_vehicle_vehicle_id")

  @@index([vehicle_id], map: "thirdparty_thirdparty_vehicle_id_046658fc")
}

model types {
  id     Int      @id @default(autoincrement())
  name   String?  @db.VarChar(255)
  movies movies[]
}

model users {
  id       Int     @id @default(autoincrement())
  username String? @db.VarChar(255)
  email    String? @db.VarChar(255)
}

model users_auth {
  id          Int     @id @default(autoincrement())
  username    String? @db.VarChar(255)
  phone_numer String? @db.VarChar(255)
  email       String? @db.VarChar(255)
  password    String? @db.VarChar(255)
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model vehicle_vehicle {
  id                            BigInt                          @id @default(autoincrement())
  plate_number                  String                          @db.VarChar(255)
  brand                         String?                         @db.VarChar(255)
  model                         String?                         @db.VarChar(255)
  image                         String?
  created_at                    DateTime                        @db.Timestamptz(6)
  updated_at                    DateTime                        @db.Timestamptz(6)
  user_id                       BigInt
  accidentreport_accidentreport accidentreport_accidentreport[]
  bolo_bolo                     bolo_bolo[]
  fullinsurance_fullinsurance   fullinsurance_fullinsurance[]
  oilservice_oilservice         oilservice_oilservice[]
  roadfund_roadfund             roadfund_roadfund[]
  thirdparty_thirdparty         thirdparty_thirdparty[]
  accounts_customuser           accounts_customuser             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vehicle_vehicle_user_id_efa05a86_fk_accounts_customuser_id")

  @@index([user_id], map: "vehicle_vehicle_user_id_efa05a86")
}

model videos {
  id          Int     @id @default(autoincrement())
  title       String? @db.VarChar(255)
  duration    BigInt?
  description String?
  channelid   Int?
  typeid      Int?
  categoryid  Int?
  videourl    String? @db.VarChar(255)
}

model wallet {
  id              BigInt @id @default(autoincrement())
  rider_id        Int
  customer_id     Int
  rider_name      String @db.VarChar(200)
  rider_last_name String @db.VarChar(200)
  length          Float
  location_from   String @db.VarChar(200)
  location_to     String @db.VarChar(200)
  amount          Float
  status          Int
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model yeneboloeth_yeneboloeth1 {
  id                  BigInt              @id(map: "yeneboloeth_yeneboloeth_pkey") @default(autoincrement())
  customer_name       String              @db.VarChar(200)
  plate_number        String              @db.VarChar(200)
  phone_number        String              @db.VarChar(200)
  inspect_date        DateTime            @db.Date
  user_id             BigInt
  accounts_customuser accounts_customuser @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "yeneboloeth_yenebolo_user_id_0e3ac438_fk_accounts_")

  @@index([user_id], map: "yeneboloeth_yeneboloeth_user_id_0e3ac438")
}
